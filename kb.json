{
  "topics": [
    {
      "topic": "System Design",
      "videos": [
        {
          "title": "Implementing Distributed Transactions using Two Phase Commit Protocol",
          "published_at_iso": "2022-03-30T04:30:07Z",
          "published_at": "30 Mar, 2022",
          "video_id": "oMhESvU87jM",
          "img": {
            "url": "https://i.ytimg.com/vi/oMhESvU87jM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "39:24",
          "view_count": {
            "abs": "414",
            "str": 414
          },
          "like_count": {
            "abs": "27",
            "str": 27
          },
          "comment_count": {
            "abs": "2",
            "str": 2
          }
        },
        {
          "title": "Distributed Transactions: Two-Phase Commit Protocol",
          "published_at_iso": "2022-03-28T04:30:03Z",
          "published_at": "28 Mar, 2022",
          "video_id": "7FgU1D4EnpQ",
          "img": {
            "url": "https://i.ytimg.com/vi/7FgU1D4EnpQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "21:21",
          "view_count": {
            "abs": "2255",
            "str": "2.25k"
          },
          "like_count": {
            "abs": "96",
            "str": 96
          },
          "comment_count": {
            "abs": "23",
            "str": 23
          }
        },
        {
          "title": "What are Embedded Databases?",
          "published_at_iso": "2022-03-25T04:30:14Z",
          "published_at": "25 Mar, 2022",
          "video_id": "xELqRiovEcI",
          "img": {
            "url": "https://i.ytimg.com/vi/xELqRiovEcI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "15:57",
          "view_count": {
            "abs": "1165",
            "str": "1.17k"
          },
          "like_count": {
            "abs": "51",
            "str": 51
          },
          "comment_count": {
            "abs": "14",
            "str": 14
          }
        }
      ],
      "total_essays": 24,
      "essays": [
        {
          "id": "indexing-on-partitioned-data",
          "title": "Indexing on Partitioned Data",
          "description": "In this essay, we will take a detailed look into how we could index the partitioned data, allowing us to query the data on secondary attributes quickly.",
          "image": "https://user-images.githubusercontent.com/4745789/152698544-c62436c9-8735-4490-90be-4d117902736b.png",
          "gif": "https://media.giphy.com/media/3o6Mb9cGKe3JzhbqPC/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning",
            "data partitioning indexes",
            "global secondary indexes",
            "local secondary indexes"
          ],
          "published_at": "2022-02-07",
          "similar": [
            "data-partitioning",
            "conflict-detection",
            "data-partitioning-strategies",
            "architectures-in-distributed-systems"
          ],
          "total_views": 380
        },
        {
          "id": "data-partitioning-strategies",
          "title": "Data Partitioning Strategies",
          "description": "In this essay, we take a detailed look into the two common approaches to horizontally partition the data - Hash Based and Range Based Partitioning.",
          "image": "https://user-images.githubusercontent.com/4745789/151733223-2f1f5611-7b4a-463d-aadf-fd522b535d67.png",
          "gif": "https://media.giphy.com/media/xTiTnrliW65rlwud8I/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning",
            "data partitioning strategies",
            "range-based partitioning",
            "hash-based partitioning"
          ],
          "published_at": "2022-01-31",
          "similar": [
            "indexing-on-partitioned-data",
            "data-partitioning",
            "mistaken-beliefs-of-distributed-systems",
            "conflict-detection"
          ],
          "total_views": 302
        },
        {
          "id": "data-partitioning",
          "title": "Data Partitioning",
          "description": "In this essay, we take a detailed look into Partitioning basics and understand how it can help us scale our Reads and Writes beyond a single machine.",
          "image": "https://user-images.githubusercontent.com/4745789/150692301-6abb0b95-c91f-4a8f-8d10-6e0f49b4d58d.png",
          "gif": "https://media.giphy.com/media/l0G17UXa1wk36OIAE/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning"
          ],
          "published_at": "2022-01-24",
          "similar": [
            "multi-master-replication",
            "indexing-on-partitioned-data",
            "handling-outages-master-replica",
            "data-partitioning-strategies"
          ],
          "total_views": 435
        }
      ],
      "id": "system-design"
    },
    {
      "topic": "Database Engineering",
      "videos": [
        {
          "title": "What are Embedded Databases?",
          "published_at_iso": "2022-03-25T04:30:14Z",
          "published_at": "25 Mar, 2022",
          "video_id": "xELqRiovEcI",
          "img": {
            "url": "https://i.ytimg.com/vi/xELqRiovEcI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "15:57",
          "view_count": {
            "abs": "1165",
            "str": "1.17k"
          },
          "like_count": {
            "abs": "51",
            "str": 51
          },
          "comment_count": {
            "abs": "14",
            "str": 14
          }
        },
        {
          "title": "How does the database guarantee reliability using write-ahead logging?",
          "published_at_iso": "2022-03-21T04:30:09Z",
          "published_at": "21 Mar, 2022",
          "video_id": "wI4hKwl1Cn4",
          "img": {
            "url": "https://i.ytimg.com/vi/wI4hKwl1Cn4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "22:6",
          "view_count": {
            "abs": "934",
            "str": 934
          },
          "like_count": {
            "abs": "66",
            "str": 66
          },
          "comment_count": {
            "abs": "5",
            "str": 5
          }
        },
        {
          "title": "How do indexes make databases read faster?",
          "published_at_iso": "2022-03-16T04:30:00Z",
          "published_at": "16 Mar, 2022",
          "video_id": "3G293is403I",
          "img": {
            "url": "https://i.ytimg.com/vi/3G293is403I/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "23:25",
          "view_count": {
            "abs": "1658",
            "str": "1.66k"
          },
          "like_count": {
            "abs": "128",
            "str": 128
          },
          "comment_count": {
            "abs": "22",
            "str": 22
          }
        }
      ],
      "total_essays": 25,
      "essays": [
        {
          "id": "indexing-on-partitioned-data",
          "title": "Indexing on Partitioned Data",
          "description": "In this essay, we will take a detailed look into how we could index the partitioned data, allowing us to query the data on secondary attributes quickly.",
          "image": "https://user-images.githubusercontent.com/4745789/152698544-c62436c9-8735-4490-90be-4d117902736b.png",
          "gif": "https://media.giphy.com/media/3o6Mb9cGKe3JzhbqPC/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning",
            "data partitioning indexes",
            "global secondary indexes",
            "local secondary indexes"
          ],
          "published_at": "2022-02-07",
          "similar": [
            "data-partitioning",
            "conflict-detection",
            "data-partitioning-strategies",
            "architectures-in-distributed-systems"
          ],
          "total_views": 380
        },
        {
          "id": "data-partitioning-strategies",
          "title": "Data Partitioning Strategies",
          "description": "In this essay, we take a detailed look into the two common approaches to horizontally partition the data - Hash Based and Range Based Partitioning.",
          "image": "https://user-images.githubusercontent.com/4745789/151733223-2f1f5611-7b4a-463d-aadf-fd522b535d67.png",
          "gif": "https://media.giphy.com/media/xTiTnrliW65rlwud8I/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning",
            "data partitioning strategies",
            "range-based partitioning",
            "hash-based partitioning"
          ],
          "published_at": "2022-01-31",
          "similar": [
            "indexing-on-partitioned-data",
            "data-partitioning",
            "mistaken-beliefs-of-distributed-systems",
            "conflict-detection"
          ],
          "total_views": 302
        },
        {
          "id": "data-partitioning",
          "title": "Data Partitioning",
          "description": "In this essay, we take a detailed look into Partitioning basics and understand how it can help us scale our Reads and Writes beyond a single machine.",
          "image": "https://user-images.githubusercontent.com/4745789/150692301-6abb0b95-c91f-4a8f-8d10-6e0f49b4d58d.png",
          "gif": "https://media.giphy.com/media/l0G17UXa1wk36OIAE/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning"
          ],
          "published_at": "2022-01-24",
          "similar": [
            "multi-master-replication",
            "indexing-on-partitioned-data",
            "handling-outages-master-replica",
            "data-partitioning-strategies"
          ],
          "total_views": 435
        }
      ],
      "id": "database-engineering"
    },
    {
      "topic": "Outage Dissections",
      "videos": [
        {
          "title": "Dissecting GitHub Outage: ID column reaching the max value 2147483647",
          "published_at_iso": "2022-03-23T04:30:05Z",
          "published_at": "23 Mar, 2022",
          "video_id": "ZFRAFTn0cQ0",
          "img": {
            "url": "https://i.ytimg.com/vi/ZFRAFTn0cQ0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "24:34",
          "view_count": {
            "abs": "1084",
            "str": "1.08k"
          },
          "like_count": {
            "abs": "94",
            "str": 94
          },
          "comment_count": {
            "abs": "24",
            "str": 24
          }
        },
        {
          "title": "Dissecting Spotify's Global Outage - March 8, 2022",
          "published_at_iso": "2022-03-12T05:19:27Z",
          "published_at": "12 Mar, 2022",
          "video_id": "h5hXivWws7k",
          "img": {
            "url": "https://i.ytimg.com/vi/h5hXivWws7k/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "26:",
          "view_count": {
            "abs": "2310",
            "str": "2.31k"
          },
          "like_count": {
            "abs": "145",
            "str": 145
          },
          "comment_count": {
            "abs": "20",
            "str": 20
          }
        }
      ],
      "total_essays": 0,
      "essays": [],
      "id": "outage-dissections"
    },
    {
      "topic": "Distributed Systems",
      "videos": [
        {
          "title": "Implementing Distributed Transactions using Two Phase Commit Protocol",
          "published_at_iso": "2022-03-30T04:30:07Z",
          "published_at": "30 Mar, 2022",
          "video_id": "oMhESvU87jM",
          "img": {
            "url": "https://i.ytimg.com/vi/oMhESvU87jM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "39:24",
          "view_count": {
            "abs": "414",
            "str": 414
          },
          "like_count": {
            "abs": "27",
            "str": 27
          },
          "comment_count": {
            "abs": "2",
            "str": 2
          }
        },
        {
          "title": "Distributed Transactions: Two-Phase Commit Protocol",
          "published_at_iso": "2022-03-28T04:30:03Z",
          "published_at": "28 Mar, 2022",
          "video_id": "7FgU1D4EnpQ",
          "img": {
            "url": "https://i.ytimg.com/vi/7FgU1D4EnpQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "21:21",
          "view_count": {
            "abs": "2255",
            "str": "2.25k"
          },
          "like_count": {
            "abs": "96",
            "str": 96
          },
          "comment_count": {
            "abs": "23",
            "str": 23
          }
        },
        {
          "title": "Handling timeouts in a microservice architecture",
          "published_at_iso": "2022-03-18T04:30:06Z",
          "published_at": "18 Mar, 2022",
          "video_id": "Hxja4crycBg",
          "img": {
            "url": "https://i.ytimg.com/vi/Hxja4crycBg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "23:38",
          "view_count": {
            "abs": "1258",
            "str": "1.26k"
          },
          "like_count": {
            "abs": "88",
            "str": 88
          },
          "comment_count": {
            "abs": "12",
            "str": 12
          }
        }
      ],
      "total_essays": 16,
      "essays": [
        {
          "id": "indexing-on-partitioned-data",
          "title": "Indexing on Partitioned Data",
          "description": "In this essay, we will take a detailed look into how we could index the partitioned data, allowing us to query the data on secondary attributes quickly.",
          "image": "https://user-images.githubusercontent.com/4745789/152698544-c62436c9-8735-4490-90be-4d117902736b.png",
          "gif": "https://media.giphy.com/media/3o6Mb9cGKe3JzhbqPC/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning",
            "data partitioning indexes",
            "global secondary indexes",
            "local secondary indexes"
          ],
          "published_at": "2022-02-07",
          "similar": [
            "data-partitioning",
            "conflict-detection",
            "data-partitioning-strategies",
            "architectures-in-distributed-systems"
          ],
          "total_views": 380
        },
        {
          "id": "data-partitioning-strategies",
          "title": "Data Partitioning Strategies",
          "description": "In this essay, we take a detailed look into the two common approaches to horizontally partition the data - Hash Based and Range Based Partitioning.",
          "image": "https://user-images.githubusercontent.com/4745789/151733223-2f1f5611-7b4a-463d-aadf-fd522b535d67.png",
          "gif": "https://media.giphy.com/media/xTiTnrliW65rlwud8I/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning",
            "data partitioning strategies",
            "range-based partitioning",
            "hash-based partitioning"
          ],
          "published_at": "2022-01-31",
          "similar": [
            "indexing-on-partitioned-data",
            "data-partitioning",
            "mistaken-beliefs-of-distributed-systems",
            "conflict-detection"
          ],
          "total_views": 302
        },
        {
          "id": "data-partitioning",
          "title": "Data Partitioning",
          "description": "In this essay, we take a detailed look into Partitioning basics and understand how it can help us scale our Reads and Writes beyond a single machine.",
          "image": "https://user-images.githubusercontent.com/4745789/150692301-6abb0b95-c91f-4a8f-8d10-6e0f49b4d58d.png",
          "gif": "https://media.giphy.com/media/l0G17UXa1wk36OIAE/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "system design",
            "distributed systems",
            "database engineering"
          ],
          "tags": [
            "distributed systems",
            "data partitioning"
          ],
          "published_at": "2022-01-24",
          "similar": [
            "multi-master-replication",
            "indexing-on-partitioned-data",
            "handling-outages-master-replica",
            "data-partitioning-strategies"
          ],
          "total_views": 435
        }
      ],
      "id": "distributed-systems"
    },
    {
      "topic": "Advanced Algorithms",
      "videos": [],
      "total_essays": 21,
      "essays": [
        {
          "id": "genetic-knapsack",
          "title": "Genetic Algorithm to solve the Knapsack Problem",
          "description": "The 0/1 Knapsack Problem has a pseudo-polynomial run-time complexity. In this essay, we look at an approximation algorithm inspired by genetics that finds a high-quality solution to it in polynomial time.",
          "image": "https://user-images.githubusercontent.com/4745789/156910296-48167efc-dc08-4f26-88b8-7037fdfc6ae3.png",
          "gif": "https://media.giphy.com/media/3orieTU2tBje4i5SzS/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "advanced algorithms"
          ],
          "tags": [
            "genetic algorithm",
            "the 0/1 knapsack problem",
            "approximation algorithm for knapsack problem"
          ],
          "published_at": "2022-03-07",
          "similar": [
            "fractional-cascading",
            "rule-30",
            "flajolet-martin",
            "1d-terrain"
          ],
          "total_views": 441
        },
        {
          "id": "lfsr",
          "title": "Pseudorandom Number Generation using LFSR",
          "description": "This essay takes a detailed look into pseudorandom number generation using LFSR, a widely adopted technique to generate random numbers on hardware and on software.",
          "image": "https://user-images.githubusercontent.com/4745789/154754358-c1bbd5ff-2a0b-4028-b1ec-05cf90300d83.png",
          "gif": "https://media.giphy.com/media/3orieLKAOlnwdqkTCg/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "advanced algorithms"
          ],
          "tags": [
            "lfsr",
            "linear feedback shift registers",
            "pseudorandom number generation algorithm"
          ],
          "published_at": "2022-02-21",
          "similar": [
            "publish-python-package-on-pypi",
            "efficient-way-to-stop-an-iterating-loop",
            "the-weird-walrus",
            "jaccard-minhash"
          ],
          "total_views": 609
        },
        {
          "id": "fork-bomb",
          "title": "Fork Bomb",
          "description": "In this essay, we explore a simple yet effective DoS attack called Fork Bomb, also called Rabbit Virus. This attack forks out processes infinitely, starving them for any resources.",
          "image": "https://user-images.githubusercontent.com/4745789/121253160-69db6d80-c8c6-11eb-8b05-202ec958324e.png",
          "gif": "https://media.giphy.com/media/l0HeiaW8q9B6tqoHS/giphy.gif",
          "yt_video_id": "",
          "categories": [
            "advanced algorithms"
          ],
          "tags": [
            "dos attack",
            "fork bomb",
            "understanding fork bomb",
            "understanding fork bomb bash",
            "linux fork bomb",
            "windows fork bomb",
            ":() { :|:& };:"
          ],
          "published_at": "2021-06-09",
          "similar": [
            "bayesian-average",
            "mongodb-cursor-skip-is-slow",
            "inheritance-c",
            "super-long-integers"
          ],
          "total_views": 425
        }
      ],
      "id": "advanced-algorithms"
    },
    {
      "topic": "Python Internals",
      "videos": [
        {
          "title": "How \"is\" operator is implemented in python?",
          "published_at_iso": "2021-05-31T13:15:50Z",
          "published_at": "31 May, 2021",
          "video_id": "Q8luYnxiFFE",
          "img": {
            "url": "https://i.ytimg.com/vi/Q8luYnxiFFE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "19:12",
          "view_count": {
            "abs": "333",
            "str": 333
          },
          "like_count": {
            "abs": "24",
            "str": 24
          },
          "comment_count": {
            "abs": "6",
            "str": 6
          }
        },
        {
          "title": "How id() function is implemented in python?",
          "published_at_iso": "2021-05-24T03:30:02Z",
          "published_at": "24 May, 2021",
          "video_id": "IGLnxdmJu2c",
          "img": {
            "url": "https://i.ytimg.com/vi/IGLnxdmJu2c/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "10:46",
          "view_count": {
            "abs": "224",
            "str": 224
          },
          "like_count": {
            "abs": "13",
            "str": 13
          },
          "comment_count": {
            "abs": "0",
            "str": 0
          }
        },
        {
          "title": "How python compares a float and an int objects?",
          "published_at_iso": "2021-05-13T03:30:06Z",
          "published_at": "13 May, 2021",
          "video_id": "u4tfIy--4GM",
          "img": {
            "url": "https://i.ytimg.com/vi/u4tfIy--4GM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "duration": "20:34",
          "view_count": {
            "abs": "208",
            "str": 208
          },
          "like_count": {
            "abs": "8",
            "str": 8
          },
          "comment_count": {
            "abs": "1",
            "str": 1
          }
        }
      ],
      "total_essays": 9,
      "essays": [
        {
          "id": "chained-operators-python",
          "title": "Chained Comparison Operators in Python",
          "description": "In this essay, we find how chained comparison expressions are evaluated, understand how short-circuit evaluations happen internally, and alter Python's expression evaluation strategy.",
          "image": "https://user-images.githubusercontent.com/4745789/116305344-47334080-a7c1-11eb-888a-a60b203ebe9d.png",
          "gif": "https://media.giphy.com/media/LpLd2NGvpaiys/giphy.gif",
          "yt_video_id": "zz2Lu5ht_jA",
          "categories": [
            "python internals"
          ],
          "tags": [
            "python",
            "python internals",
            "internals of chained comparison operators"
          ],
          "published_at": "2021-04-27",
          "similar": [
            "the-weird-walrus",
            "setting-up-graphite-grafana-using-nginx-on-ubuntu",
            "making-http-requests-using-netcat",
            "how-sleepsort-helped-me-understand-concurrency-in-golang"
          ],
          "total_views": 275
        },
        {
          "id": "the-weird-walrus",
          "title": "The Weird Walrus",
          "description": "In this essay, we alter the Python Grammar and allow it run Assignment Expressions without any parenthesis.",
          "image": "https://user-images.githubusercontent.com/4745789/112817071-ac4f2580-909f-11eb-8d56-f89536cfa065.png",
          "gif": "https://media.giphy.com/media/SbIJjAaist696ywQXx/giphy.gif",
          "yt_video_id": "rWb7VYz1q1U",
          "categories": [
            "python internals"
          ],
          "tags": [
            "python internals",
            "cpython internals",
            "walrus operator",
            "changing cpython grammar"
          ],
          "published_at": "2021-03-29",
          "similar": [
            "setting-up-graphite-grafana-using-nginx-on-ubuntu",
            "super-long-integers",
            "making-http-requests-using-netcat",
            "how-sleepsort-helped-me-understand-concurrency-in-golang"
          ],
          "total_views": 2377
        },
        {
          "id": "constant-folding-python",
          "title": "Constant Folding in Python",
          "description": "Every programming language aims to be performant and Python is no exception. In this essay, we dive deep into Python internals and find out how Python makes its interpreter performant using a technique called Constant Folding.",
          "image": "https://user-images.githubusercontent.com/4745789/104118331-23e9a000-534e-11eb-9ec8-8369cdae40b1.png",
          "gif": "https://media.giphy.com/media/mMCXtwz1DM3xPKgkOB/giphy.gif",
          "categories": [
            "python internals"
          ],
          "tags": [
            "compiler optimization",
            "constant folding",
            "cpython internals"
          ],
          "published_at": "2021-01-10",
          "similar": [
            "python-prompts",
            "python-caches-integers",
            "python-iterable-integers",
            "fsm"
          ],
          "total_views": 3917
        }
      ],
      "id": "python-internals"
    }
  ],
  "total_essays": 74,
  "recent_essay": {
    "id": "genetic-knapsack",
    "title": "Genetic Algorithm to solve the Knapsack Problem",
    "description": "The 0/1 Knapsack Problem has a pseudo-polynomial run-time complexity. In this essay, we look at an approximation algorithm inspired by genetics that finds a high-quality solution to it in polynomial time.",
    "image": "https://user-images.githubusercontent.com/4745789/156910296-48167efc-dc08-4f26-88b8-7037fdfc6ae3.png",
    "gif": "https://media.giphy.com/media/3orieTU2tBje4i5SzS/giphy.gif",
    "yt_video_id": "",
    "categories": [
      "advanced algorithms"
    ],
    "tags": [
      "genetic algorithm",
      "the 0/1 knapsack problem",
      "approximation algorithm for knapsack problem"
    ],
    "published_at": "2022-03-07",
    "similar": [
      "fractional-cascading",
      "rule-30",
      "flajolet-martin",
      "1d-terrain"
    ],
    "total_views": 441
  },
  "total_nuggets": 839,
  "recent_nuggets": {
    "id": "1507543562883317760",
    "thought": "Spend time learning uncommon skills only after you master the common ones. Fallbacks are important.",
    "posted_at": "26 Mar, 2022",
    "slug": "spend-time-learning-uncommon-skills-1507543562883317760",
    "keywords": [
      "spend",
      "time",
      "learning",
      "uncommon",
      "skills",
      "master",
      "common",
      "ones",
      "fallbacks",
      "important"
    ]
  },
  "courses": [
    {
      "id": "system-design-masterclass",
      "name": "System Design Masterclass",
      "url": "/masterclass"
    },
    {
      "id": "all-things-redis",
      "name": "All Things Redis",
      "url": "/all-things-redis"
    }
  ]
}