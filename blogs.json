[
  {
    "id": "fractional-cascading",
    "title": "Fractional Cascading - Optimizing k binary searches",
    "description": "The performance of binary search when applied on k lists independently can be improved using bridges and the technique is called Fractional Cascading. Fractional Cascading also sees its application in Geometric Data Structures, Segment Trees, and Databases.",
    "image": "https://user-images.githubusercontent.com/4745789/81494077-8112ea80-92c3-11ea-9416-bb2422334744.png",
    "gif": "https://media.giphy.com/media/3o6Zt6xiofJM6XabUA/giphy.gif",
    "categories": ["algorithm"],
    "tags": [],
    "published_at": "2020-05-10"
  },
  {
    "id": "copy-on-write",
    "title": "Copy-on-Write Semantics",
    "description": "Copy-on-write is used to model Time Travel, build databases with no locks, and makes the fork system call super-efficient.",
    "image": "https://user-images.githubusercontent.com/4745789/80913860-73121680-8d65-11ea-87f8-d02460f05a22.png",
    "gif": "https://media.giphy.com/media/GIrIC3g657AYg/giphy.gif",
    "categories": ["engineering"],
    "tags": [],
    "published_at": "2020-05-03"
  },
  {
    "id": "mysql-cache",
    "title": "What makes MySQL LRU cache scan resistant",
    "description": "The MySQL InnoDB Storage engine uses LRU cache but it suffers from a notorious problem. In this article, we find how by using Midpoint Insertion Strategy and changing one aspect of LRU, MySQL becomes scan resistant and super performant.",
    "image": "https://user-images.githubusercontent.com/4745789/80304802-0ed7db80-87d6-11ea-98db-bc5d4afe965b.png",
    "gif": "https://media.giphy.com/media/daUOBsa1OztxC/giphy.gif",
    "categories": ["mysql", "algorithm"],
    "tags": [],
    "published_at": "2020-04-26"
  },
  {
    "id": "fsm",
    "title": "Building Finite State Machines with Python Coroutines",
    "description": "The most intuitive way of building and implementing Finite State Machines is by using Python Coroutines and in this article, we find how and why.",
    "image": "https://user-images.githubusercontent.com/4745789/79684359-3ebf3600-824e-11ea-97cc-0f06c2919aeb.png",
    "gif": "https://media.giphy.com/media/KhdQ2Ia3FJuKs/giphy.gif",
    "categories": ["python"],
    "tags": [],
    "published_at": "2020-04-19"
  },
  {
    "id": "bayesian-average",
    "title": "Solving an age-old problem using Bayesian Average",
    "description": "Ranking a list of movies, products, books or even restaurants is tricky and in this article, we find what works for such a rating system and the math behind it.",
    "image": "https://user-images.githubusercontent.com/4745789/78990379-ebfdc400-7b53-11ea-88b7-cd64e39eabf6.png",
    "gif": "https://media.giphy.com/media/dJ4vNQ7r72pb4nDhN5/giphy.gif",
    "categories": ["statistics"],
    "tags": [],
    "published_at": "2020-04-12"
  },
  {
    "id": "sliding-window-ratelimiter",
    "title": "Designing a sliding window based rate limiter",
    "description": "A rate limiter is used to control the rate of traffic sent or received on the network and in this article we dive deep and design a sliding window based rate limiter.",
    "image": "https://user-images.githubusercontent.com/4745789/78276848-3c13cf80-7531-11ea-8186-99cb1da58e50.png",
    "gif": "https://media.giphy.com/media/5YuhLwDgrgtRVwI7OY/giphy.gif",
    "categories": ["algorithm"],
    "tags": [],
    "published_at": "2020-04-05"
  },
  {
    "id": "idf",
    "title": "All you need to know about Inverse Document Frequency",
    "description": "TF-IDF is extensively used in search engines and in various document classification and clustering techniques. Instead of taking the formula by the word, we take a detour and dive deep into the better half of it and find its connection with Probability, the role it plays in document relevance and the intuition behind it.",
    "image": "https://user-images.githubusercontent.com/4745789/76207579-10e4db80-6224-11ea-91ba-b67359125156.png",
    "gif": "https://media.giphy.com/media/3ornjWIRSzXEw61KH6/giphy.gif",
    "categories": ["algorithm"],
    "tags": ["tfidf", "idf", "inverse document frequency", "term frequency inverse document frequency", "term frequency", "understanding tfidf", "understanding idf", "math behind tfidf", "math behind idf", "idf as probability"],
    "published_at": "2020-03-06"
  },
  {
    "id": "better-programmer",
    "title": "Eight rituals to be a better programmer",
    "description": "\"How to get better at programming?\" is the question I had been asked quite a few times, and today I lay down the 8 rituals I have been following, and action items for each, to be good and get better at programming.",
    "image": "https://user-images.githubusercontent.com/4745789/75548769-0cfecf80-5a54-11ea-8dd2-1e452ba1298b.png",
    "gif": "https://media.giphy.com/media/14gQ5vtwD050LC/giphy.gif",
    "categories": ["productivity"],
    "tags": ["better programmer", "todo of better programmer", "good programmer", "get better at programming", "top coder", "codechef", "hackerrank"],
    "published_at": "2020-02-28"
  },
  {
    "id": "python-prompts",
    "title": "Personalize your python prompt",
    "description": "Personalization is what we all love. In this article we find how we could personalize the Python interpreter prompt >>>",
    "image": "https://user-images.githubusercontent.com/4745789/74850923-8ade1f00-5360-11ea-8ed5-1072c8a718c2.png",
    "gif": "https://media.giphy.com/media/TFTqzyOQwT2zS/giphy.gif",
    "categories": ["python"],
    "tags": ["python", "interpreter", "prompt", "customize", "personalize", "colorize", "ps1", "ps2", "fun"],
    "published_at": "2020-02-21"
  },
  {
    "id": "rule-30",
    "title": "Pseudorandom numbers using Cellular Automata - Rule 30",
    "description": "Generating pseudorandom numbers is an interesting problem in Computer Science. In this article, we dive deep into an algorithm for generating pseudorandom numbers using Rule 30 of Cellular Automaton.",
    "image": "https://user-images.githubusercontent.com/4745789/74463952-b07aac80-4eb8-11ea-8d8e-6f286767ec7e.png",
    "gif": "https://media.giphy.com/media/26uflDxU6cEhrhmUg/giphy.gif",
    "categories": ["algorithm"],
    "tags": ["algorithm", "cellular automata", "rule 30", "pseudorandom number generator", "random numbers", "elementary cellular automata", "1d cellular automata"],
    "published_at": "2020-02-14"
  },
  {
    "id": "function-overloading",
    "title": "Function overloading in Python",
    "description": "Python natively does not support function overloading - having multiple functions with the same name. Today we see how we can implement and add this functionality to Python by using common language constructs like decorators and dictionaries.",
    "image": "https://user-images.githubusercontent.com/4745789/73909201-04423000-48d2-11ea-8bd0-d7c25f6435c1.png",
    "gif": "https://media.giphy.com/media/WtCHRSPCuqS8E/giphy.gif",
    "categories": ["python"],
    "tags": ["python", "function overloading", "language constructs", "decorator", "function", "namespace", "advanced python"],
    "published_at": "2020-02-07"
  },
  {
    "id": "isolation-forest",
    "title": "Isolation Forest algorithm for anomaly detection",
    "description": "Anomaly detection is an age-old problem and in this article, we dive deep into an unsupervised algorithm, Isolation Forest, that beautifully exploits the characteristics of anomalies. Instead of profiling normal points and labeling others as anomalies, the algorithm is actually is tuned to detect anomalies.",
    "image": "https://user-images.githubusercontent.com/4745789/73280907-34743980-4215-11ea-89f0-eac4a71df6e5.png",
    "gif": "https://media.giphy.com/media/xGdvlOVSWaDvi/giphy.gif",
    "categories": ["algorithm", "data science"],
    "tags": ["algorithm", "machine learning", "anomaly detection", "data science", "artificial intelligence", "ml", "ds", "ai", "unsupervised algorithm", "fast anomaly detection", "efficient anomaly detection"],
    "published_at": "2020-01-28"
  },
  {
    "id": "image-steganography",
    "title": "Everything that you need to know about Image Steganography",
    "description": "Steganography has been around since at least 440 BCE but with the rise of computers, the techniques have evolved to handle digital data. In this article, we see the science behind image steganography, how it exploits various properties of images to hide secrets and walkthrough a few techniques in detail.",
    "image": "https://user-images.githubusercontent.com/4745789/72659471-2a1c9900-39e6-11ea-9b93-c11bf3eefc43.png",
    "gif": "https://media.giphy.com/media/V1NxC1YoNEHBe/giphy.gif",
    "categories": ["steganography", "image"],
    "tags": ["steganography", "image steganography", "image steganography internals", "DCT JPEG", "JPEG", "LSB", "Least Significant Bit Substitution", "Adaptive Least Significant Bit Substitution", "ancient greece", "Discrete Cosine Transform", "Discrete Fourier Transform", "Lossy and Lossless image formats", "rgb color model", "YCbCr color model", "technology", "code", "data science", "tech"],
    "published_at": "2020-01-17"
  },
  {
    "id": "super-long-integers",
    "title": "How python implements super long integers?",
    "description": "Python must be doing something beautiful internally to support super long integers and today we find out what's under the hood. The article goes in-depth to explain design, storage, and operations on super long integers as implemented by Python.",
    "image": "https://user-images.githubusercontent.com/4745789/72040055-55f49c00-32cd-11ea-9190-8f5a67c2f3d9.png",
    "gif": "https://media.giphy.com/media/SKGo6OYe24EBG/giphy.gif",
    "categories": ["programming", "python", "python internals"],
    "tags": ["programming", "python", "cpython source code", "python internals", "understanding python source code", "coding", "developer", "technology", "code", "pythonprogramming", "python programming", "data science", "tech"],
    "published_at": "2020-01-10"
  },
  {
    "id": "i-changed-my-python",
    "title": "I changed my Python and made it dubious | Python Internals",
    "description": "I changed the Python's source code and made addition incorrect and unpredictable. The addition operation will internally perform either Subtraction. Multiplication, Floor Division or Power at random.",
    "image": "https://user-images.githubusercontent.com/4745789/71662123-60b3ac00-2d76-11ea-8018-f558cef93a59.png",
    "gif": "https://media.giphy.com/media/aZ5wedD7Jtazm/giphy.gif",
    "categories": ["programming", "python", "python internals"],
    "tags": ["programming", "python", "cpython source code", "python internals", "understanding python source code", "coding", "developer", "technology", "code", "pythonprogramming", "python programming", "data science", "tech"],
    "published_at": "2020-01-03"
  },
  {
    "id": "efficient-way-to-stop-an-iterating-loop",
    "title": "An efficient way to stop an iterating loop",
    "description": "There are two ways through which we can stop an iterating loop, first by using break statement and second by making loop condition false. Let's see if one is better than the other.",
    "image": "https://user-images.githubusercontent.com/4745789/64327846-02ee9d80-cfea-11e9-8698-4a18bfe76068.png",
    "gif": "https://media.giphy.com/media/cKKXNlTYino7hWNXwl/giphy.gif",
    "categories": ["programming", "benchmark"],
    "tags": ["programming", "benchmark", "efficient way to stop loop", "break or condition", "efficient for loop"],
    "published_at": "2019-09-06"
  },
  {
    "id": "fast-and-efficient-pagination-in-mongodb",
    "title": "Fast and Efficient Pagination in MongoDB",
    "description": "MongoDB is a document based data store and hence pagination is one of the most common use case of it. Find out how you can paginate the results ...",
    "image": "https://user-images.githubusercontent.com/4745789/63153080-1336dc80-c02b-11e9-931f-0c7552a63ebc.png",
    "gif": "https://media.giphy.com/media/lRnUWhmllPI9a/giphy.gif",
    "categories": ["database", "mongodb", "scale"],
    "tags": ["mongodb", "scalability", "pagination", "fast", "scale", "mongodb skip limit", "mongodb skip limit fast pagination"],
    "published_at": "2017-06-06"
  },
  {
    "id": "benchmark-and-compare-pagination-approach-in-mongodb",
    "title": "Benchmark and compare the two approaches to paginate in MongoDB",
    "description": "Benchmark results for two pagination approaches for MongoDB.",
    "image": "https://user-images.githubusercontent.com/4745789/63220759-d514f680-c1ab-11e9-8a38-7b1828946b74.png",
    "gif": "https://media.giphy.com/media/c5eqVJN7oNLTq/giphy.gif",
    "categories": ["database", "mongodb", "benchmark"],
    "tags": ["mongodb", "scalability", "pagination", "fast", "scale", "mongodb skip limit", "mongodb skip limit fast pagination", "benchmark results"],
    "published_at": "2017-06-02"
  },
  {
    "id": "mongodb-cursor-skip-is-slow",
    "title": "Why MongoDB's cursor.skip() is slow?",
    "description": "MongoDB's cursor.skip() is very inefficient, why is that? Even though it is slow and inefficient,  team MongoDB wants to continue keeping it. Find out why ...",
    "image": "https://user-images.githubusercontent.com/4745789/63220620-4d2ded00-c1a9-11e9-8eea-11766291e06f.png",
    "gif": "https://media.giphy.com/media/nqIuAIxYebIt2/giphy.gif",
    "categories": ["database", "mongodb"],
    "tags": ["mongodb", "cursor", "slow", "mongodb cursor slow", "mongodb skip limit"],
    "published_at": "2017-06-04"
  },
  {
    "id": "how-sleepsort-helped-me-understand-concurrency-in-golang",
    "title": "How Sleepsort helped me understand concurrency in Golang",
    "description": "Understanding concurrency in any programming language is tricky let alone Golang; hence to get my hands dirty the first thing I usually implement is sleepsort.",
    "image": "https://user-images.githubusercontent.com/4745789/63222328-203b0380-c1c4-11e9-9dd0-34c4bd9d1c6b.png",
    "gif": "https://media.giphy.com/media/QmJ3e9So5M9NdNkOGo/giphy.gif",
    "categories": ["golang", "programming", "concurrency"],
    "tags": ["golang", "programming", "concurrency", "sleepsort", "concurrency in golang", "sleepsort in golang"],
    "published_at": "2017-07-16"
  },
  {
    "id": "making-http-requests-using-netcat",
    "title": "Make HTTP requests using netcat",
    "description": "All our lives we have been hitting REST APIs with libraries and utilities like curl and postman. Its time we do it the hard way with netcat, just for fun!",
    "image": "https://user-images.githubusercontent.com/4745789/63222693-a5c0b280-c1c8-11e9-9cd4-808225e579f3.png",
    "gif": "https://media.giphy.com/media/2tSodgDfwCjIMCBY8h/giphy.gif",
    "categories": ["python", "programming"],
    "tags": ["netcat", "python", "flask", "netcat with flask"],
    "published_at": "2017-07-05"
  },
  {
    "id": "multiple-mysql-on-same-server-using-docker",
    "title": "Multiple MySQL server running on same Ubuntu server",
    "description": "Have multiple MySQL versions running on same server within 5 minutes.",
    "image": "https://user-images.githubusercontent.com/4745789/63222993-74e27c80-c1cc-11e9-8229-dd7e5d4f1173.png",
    "gif": "https://media.giphy.com/media/GIrIC3g657AYg/giphy.gif",
    "categories": ["mysql", "database", "docker", "devops"],
    "tags": ["devops", "database", "docker", "mysql", "running mysql using docker"],
    "published_at": "2016-05-13"
  },
  {
    "id": "setting-up-graphite-using-nginx-on-ubuntu",
    "title": "Setting up Graphite using Nginx on an Ubuntu server",
    "description": "Part 1: Monitor your production systems and application analytics using Graphite. This article will help you setup these tools on Ubuntu 14.04 on a Nginx webserver with PostgreSQL as backend.",
    "image": "https://user-images.githubusercontent.com/4745789/63223138-c68c0680-c1ce-11e9-942b-60b92d3f8a28.png",
    "gif": "https://media.giphy.com/media/l4FGzAPvg5PbZrVlK/giphy.gif",
    "categories": ["devops"],
    "tags": ["devops", "ubuntu", "graphite on ubuntu", "graphite and nginx on ubuntu"],
    "published_at": "2015-12-14"
  },
  {
    "id": "setting-up-graphite-grafana-using-nginx-on-ubuntu",
    "title": "Setting up Graphite and Grafana on an Ubuntu server",
    "description": "Part 2: Monitor your production systems and application analytics using Graphite. This article will help you setup these tools on Ubuntu 14.04 on a Nginx webserver with PostgreSQL as backend.",
    "image": "https://user-images.githubusercontent.com/4745789/63223314-e58b9800-c1d0-11e9-83d8-e263ce3eb874.png",
    "gif": "https://media.giphy.com/media/Me1GB9z50XUKQ/giphy.gif",
    "categories": ["devops"],
    "tags": ["devops", "ubuntu", "grafana", "graphite and grafana on ubuntu", "grafana and graphite and nginx on ubuntu"],
    "published_at": "2015-12-14"
  },
  {
    "id": "publish-python-package-on-pypi",
    "title": "Publish python package on PyPI",
    "description": "If you have written something cool in Python and want to make it installable via pip and easy_install, this post will help you publish your python online.",
    "image": "https://user-images.githubusercontent.com/4745789/63223433-e45b6a80-c1d2-11e9-921f-c2cc0153cf4a.png",
    "gif": "https://media.giphy.com/media/TfKfqjt2i4GIM/giphy.gif",
    "categories": ["python"],
    "tags": ["python", "publish python package", "pypi"],
    "published_at": "2015-11-10"
  }
]
